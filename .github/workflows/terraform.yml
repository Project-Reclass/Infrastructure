- name: Setup Terraform
  uses: hashicorp/setup-terraform@v1
  with:
    # terraform_version: 0.13.0
    cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

on: 
  pull_request:
    branches:
      - master

jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest
    steps:
    - name: Check out code  
      uses: actions/checkout@v1

    - name: Run a Terraform init  
      uses: docker://hashicorp/terraform:0.12.11
      with:
        entrypoint: terraform
        args: init

    - name: Run a Terraform validate    
      uses: docker://hashicorp/terraform:0.12.11
      with:
        entrypoint: terraform
        args: validate
        
    - name: Run a Terraform format check    
      uses: docker://hashicorp/terraform:0.12.11
      with:
        entrypoint: terraform
        args: fmt -check
      
    - name: Terraform Plan
      uses: docker://hashicorp/terraform:0.12.11
      with:
        entrypoint: terraform
        args: plan
      continue-on-error: true
      
    - name: Update Pull Request
      uses: actions/github-script@0.9.0
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outputs.stdout }}\`

          <details><summary>Show Plan</summary>

          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
          
    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1





